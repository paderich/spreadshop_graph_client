[Cassette: 'spreadshop_graph_client/queries/shop_querycall/with_valid_parameters_returns_the_correct_shop_data'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :drop_unused_requests=>false, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
  [Cassette: 'spreadshop_graph_client/queries/shop_querycall/with_valid_parameters_returns_the_correct_shop_data'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 0 interaction(s): {  }
[Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with valid parameters/returns the correct shop data'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :drop_unused_requests=>false, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://api.spreadshop.com/v1/graphql] (disabled: false)
  [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with valid parameters/returns the correct shop data'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 1 interaction(s): { [post https://api.spreadshop.com/v1/graphql] => [200 "{\"data\":{\"shop\":{\"id\":\"1394271\",\"name\":\"code-quest\"}}}"] }
  [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with valid parameters/returns the correct shop data'] Checking if [post https://api.spreadshop.com/v1/graphql] matches [post https://api.spreadshop.com/v1/graphql] using [:method, :uri]
    [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with valid parameters/returns the correct shop data'] method (matched): current request [post https://api.spreadshop.com/v1/graphql] vs [post https://api.spreadshop.com/v1/graphql]
    [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with valid parameters/returns the correct shop data'] uri (matched): current request [post https://api.spreadshop.com/v1/graphql] vs [post https://api.spreadshop.com/v1/graphql]
  [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with valid parameters/returns the correct shop data'] Found matching interaction for [post https://api.spreadshop.com/v1/graphql] at index 0: [200 "{\"data\":{\"shop\":{\"id\":\"1394271\",\"name\":\"code-quest\"}}}"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.spreadshop.com/v1/graphql]
[Cassette: 'spreadshop_graph_client/queries/shop_querycall/with_invalid_parameters_raises_an_error_when_graph_ql_returns_errors'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :drop_unused_requests=>false, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
  [Cassette: 'spreadshop_graph_client/queries/shop_querycall/with_invalid_parameters_raises_an_error_when_graph_ql_returns_errors'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 0 interaction(s): {  }
[Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with invalid parameters/raises an error when GraphQL returns errors'] Initialized with options: {:record=>:once, :record_on_error=>true, :match_requests_on=>[:method, :uri], :allow_unused_http_interactions=>true, :drop_unused_requests=>false, :serialize_with=>:yaml, :persist_with=>:file_system, :persister_options=>{}}
[webmock] Handling request: [post https://api.spreadshop.com/v1/graphql] (disabled: false)
  [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with invalid parameters/raises an error when GraphQL returns errors'] Initialized HTTPInteractionList with request matchers [:method, :uri] and 1 interaction(s): { [post https://api.spreadshop.com/v1/graphql] => [200 "{\"errors\":[{\"message\":\"Variable \\\"$platform\\\" got invalid value \\\"INVALID\\\"; Val"] }
  [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with invalid parameters/raises an error when GraphQL returns errors'] Checking if [post https://api.spreadshop.com/v1/graphql] matches [post https://api.spreadshop.com/v1/graphql] using [:method, :uri]
    [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with invalid parameters/raises an error when GraphQL returns errors'] method (matched): current request [post https://api.spreadshop.com/v1/graphql] vs [post https://api.spreadshop.com/v1/graphql]
    [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with invalid parameters/raises an error when GraphQL returns errors'] uri (matched): current request [post https://api.spreadshop.com/v1/graphql] vs [post https://api.spreadshop.com/v1/graphql]
  [Cassette: 'SpreadshopGraphClient::Queries::ShopQuery/.call/with invalid parameters/raises an error when GraphQL returns errors'] Found matching interaction for [post https://api.spreadshop.com/v1/graphql] at index 0: [200 "{\"errors\":[{\"message\":\"Variable \\\"$platform\\\" got invalid value \\\"INVALID\\\"; Val"]
[webmock] Identified request type (stubbed_by_vcr) for [post https://api.spreadshop.com/v1/graphql]
